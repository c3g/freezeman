# Generated by Django 3.1 on 2021-10-21 21:20

from django.conf import settings
from django.db import migrations, models
from django.contrib.auth.models import User
import django.db.models.deletion
import reversion

ADMIN_USERNAME='biobankadmin'

def initialize_protocolbysubprotocols(apps, schema_editor):
    Protocol = apps.get_model("fms_core", "Protocol")
    ProtocolBySubprotocol = apps.get_model("fms_core", "ProtocolBySubprotocol")

    SUBPROTOCOLS_BY_PROTOCOL = {
      "Illumina Infinium Preparation": ["Infinium: Amplification",
                                        "Infinium: Fragmentation",
                                        "Infinium: Precipitation",
                                        "Infinium: Hybridization",
                                        "Infinium: Wash Beadchip",
                                        "Infinium: Extend and Stain",
                                        "Infinium: Scan Preparation",]
    }
    
    admin_user = User.objects.get(username=ADMIN_USERNAME)
    admin_user_id = admin_user.id

    with reversion.create_revision(manage_manually=True):
        reversion.set_comment("Creates relation between protocol and subprotocol")
        reversion.set_user(admin_user)

        for protocol_name in SUBPROTOCOLS_BY_PROTOCOL.keys():
            parent = Protocol.objects.get(name=protocol_name)
            for subprotocol_name in SUBPROTOCOLS_BY_PROTOCOL[protocol_name]:
                child = Protocol.objects.get(name=subprotocol_name)
                protocolbysubprotocol = ProtocolBySubprotocol.objects.create(child=child, parent=parent,
                                                                             created_by_id=admin_user_id, updated_by_id=admin_user_id)
                reversion.add_to_revision(protocolbysubprotocol)


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('fms_core', '0023_v3_4_0'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProtocolBySubprotocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date the instance was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date the instance was modified.')),
                ('deleted', models.BooleanField(default=False, help_text='Whether this instance has been deleted.')),
                ('child', models.ForeignKey(help_text='Child protocol', on_delete=django.db.models.deletion.CASCADE, related_name='child_protocol', to='fms_core.protocol')),
                ('created_by', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='fms_core_protocolbysubprotocol_creation', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(help_text='Parent protocol', on_delete=django.db.models.deletion.CASCADE, related_name='parent_protocol', to='fms_core.protocol')),
                ('updated_by', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='fms_core_protocolbysubprotocol_modification', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='protocol',
            name='child_of',
            field=models.ManyToManyField(blank=True, related_name='parent_of', through='fms_core.ProtocolBySubprotocol', to='fms_core.Protocol'),
        ),
         migrations.RunPython(
            initialize_protocolbysubprotocols,
            reverse_code=migrations.RunPython.noop,
        ),
    ]
