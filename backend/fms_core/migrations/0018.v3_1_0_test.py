# Generated by Django 3.1 on 2021-03-03 19:08

from django.db import migrations, models, transaction
import django.db.models.deletion
import json
from datetime import datetime, timedelta

from ..utils import float_to_decimal


def move_volume_history_to_update_process(apps, schema_editor):
    Version = apps.get_model("reversion", "Version")
    Revision = apps.get_model("reversion", "Revision")
    Protocol = apps.get_model("fms_core", "Protocol")

    update_protocol = Protocol.objects.get(name="Update")

    for revision in Revision.objects.all():
        for version in Version.objects.filter(content_type__model="sample", revision_id=revision.id):
            data = json.loads(version.serialized_data)
            volume_history = data[0]["fields"]["volume_history"]
            if len(volume_history) > 1: # check if this is not just a sample creation
                last_vh = volume_history[-1]
                # Check if it is a volume history volume update
                if last_vh["update_type"] == "update":
                    version_date = datetime.strptime(last_vh["date"], '%Y-%m-%dT%H:%M:%S.%fZ')
                    date_difference = (version_date - revision.date_created.replace(tzinfo=None))
                    # Check if the date stored in volume_history vs revision creation date correspond approximately
                    if (date_difference.total_seconds()/60) < 5:
                        process, _ = Process.objects.get_or_create(comment=f'Migration from Revision #{revision.id}',
                                                                   protocol=update_protocol)
                        volume_used = float_to_decimal(volume_history[-2]["volume_value"] - volume_history[-1]["volume_value"])
                        ProcessSample.objects.create(process=process,
                                                     source_sample_id=version.object_id,
                                                     execution_date=version_date,
                                                     volume_used=volume_used,
                                                     comment=data[0]["fields"]["update_comment"])



class Migration(migrations.Migration):

    dependencies = [
        ('fms_core', '0017_v3_1_0'),
    ]

    operations = [
        # migrations.RunPython(
        #     move_volume_history_to_update_process,
        #     migrations.RunPython.noop
        # ),



    ]
