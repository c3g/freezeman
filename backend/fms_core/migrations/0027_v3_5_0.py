# Generated by Django 3.1 on 2021-11-01 19:17

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    dependencies = [
        ('fms_core', '0026_v3_5_0'),
    ]

    operations = [
        migrations.CreateModel(
            name='FullSample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Sample name.', max_length=200, validators=[django.core.validators.RegexValidator(re.compile('^[a-zA-Z0-9.\\-_]{1,200}$'))])),
                ('volume', models.DecimalField(decimal_places=3, help_text='Current volume of the sample, in µL. ', max_digits=20)),
                ('concentration', models.DecimalField(blank=True, decimal_places=3, help_text='Concentration in ng/µL. Required for nucleic acid samples.', max_digits=20, null=True, verbose_name='concentration in ng/µL')),
                ('depleted', models.BooleanField(default=False, help_text='Whether this sample has been depleted.')),
                ('collection_site', models.CharField(help_text='The facility designated for the collection of samples.', max_length=200)),
                ('tissue_source', models.CharField(blank=True, help_text='Can only be specified if the biospecimen type is DNA or RNA.', max_length=200)),
                ('creation_date', models.DateField(help_text='Date of the sample reception or extraction.')),
                ('coordinates', models.CharField(blank=True, help_text='Coordinates of the sample in a parent container. Only applicable for containers that directly store samples with coordinates, e.g. plates.', max_length=10)),
            ],
            options={
                'db_table': 'fms_core_fullsample',
                'managed': False,
            },
        ),
        migrations.AlterField(
            model_name='derivedsample',
            name='sample',
            field=models.ForeignKey(help_text='Sample associated to this DerivedSample', on_delete=django.db.models.deletion.PROTECT, related_name='derived_samples', to='fms_core.sample'),
        ),
        migrations.RunSQL(
            """
                DROP VIEW IF EXISTS fms_core_fullsample;
                CREATE OR REPLACE VIEW fms_core_fullsample AS
                SELECT sample.id, sample.id AS sample_id, sample.name, sample.container_id, sample.coordinates, sample.volume, sample.concentration, sample.depleted, array_remove(array_agg(DISTINCT sbyp.project_id), NULL) AS projects, array_remove(array_agg(pm.id), NULL) AS process_measurements_id, array_remove(array_agg(sl.parent_id), NULL) AS child_of_id, sample.creation_date, sample.created_at, sample.updated_at, sample.created_by_id, sample.updated_by_id, sample.deleted, sample.update_comment, sample.alias, derived.sample_kind_id, derived.tissue_source, derived.experimental_group, derived.id AS derived_sample_id, derived.biosample_id,  biosample.individual_id, biosample.collection_site
                FROM fms_core_derivedbysample AS dbys 
                JOIN fms_core_sample AS sample 
                ON dbys.sample_id =  sample.id 
                JOIN fms_core_derivedsample AS derived
                ON dbys.derived_sample_id  = derived.id 
                LEFT JOIN fms_core_samplebyproject AS sbyp
                ON sbyp.sample_id = sample.id
                LEFT JOIN fms_core_processmeasurement AS pm 
                ON pm.source_sample_id = sample.id
                LEFT JOIN fms_core_samplelineage AS sl 
                ON sl.child_id = sample.id
                JOIN fms_core_biosample AS biosample 
                ON derived.biosample_id = biosample.id GROUP BY sample.id, derived.sample_kind_id, derived.tissue_source, derived.experimental_group, derived.id, derived.biosample_id, biosample.individual_id, biosample.collection_site,  sl.child_id, biosample.id  ORDER BY biosample.id;
            """,
            migrations.RunSQL.noop
        )
    ]
