# Generated by Django 3.1 on 2021-05-17 21:39

from django.conf import settings

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re
import json


def rename_process_sample_versions(apps, schema_editor):
    '''
        In Versions, even though the content_type__model is changed from ProcessSample to ProcessMeasurement,
        there remains traces of ProcessSample in the serialized_data model field, and in the obj repr text.
    '''
    Version = apps.get_model("reversion", "Version")

    # Filtering using serialized_data__contains, because content_type model is now ProcessMeasurement due to model rename
    for version in Version.objects.filter(serialized_data__contains='"model": "fms_core.processsample"'):
        version.object_repr = version.object_repr.replace("ProcessSample", "ProcessMeasurement")

        data = json.loads(version.serialized_data)
        data[0]["model"] = "fms_core.processmeasurement"
        version.serialized_data = json.dumps(data)

        version.save()


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('fms_core', '0020_v3_2_0'),
    ]

    operations = [
        # Renaming ProcessSample model to ProcessMeasurement
        migrations.RenameModel('ProcessSample', 'ProcessMeasurement'),
        migrations.RenameField('SampleLineage', 'process_sample', 'process_measurement'),
        migrations.RunPython(
            rename_process_sample_versions,
            reverse_code=migrations.RunPython.noop,
        ),
        migrations.AlterField(
            model_name='processmeasurement',
            name='created_by',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='fms_core_processmeasurement_creation', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='processmeasurement',
            name='process',
            field=models.ForeignKey(help_text='Process', on_delete=django.db.models.deletion.PROTECT, related_name='process_measurement', to='fms_core.process'),
        ),
        migrations.AlterField(
            model_name='processmeasurement',
            name='source_sample',
            field=models.ForeignKey(help_text='Source Sample', on_delete=django.db.models.deletion.PROTECT, related_name='process_measurement', to='fms_core.sample'),
        ),
        migrations.AlterField(
            model_name='processmeasurement',
            name='updated_by',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='fms_core_processmeasurement_modification', to=settings.AUTH_USER_MODEL),
        ),

        # New models Platform, InstrumentType, Instrument
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date the instance was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date the instance was modified.')),
                ('deleted', models.BooleanField(default=False, help_text='Whether this instance has been deleted.')),
                ('name', models.CharField(
                    choices=[('LS454', 'LS454'), ('ILLUMINA', 'ILLUMINA'), ('PACBIO_SMRT', 'PACBIO_SMRT'),
                             ('ION_TORRENT', 'ION_TORRENT'), ('CAPILLARY', 'CAPILLARY'),
                             ('OXFORD_NANOPORE', 'OXFORD_NANOPORE'), ('BGISEQ', 'BGISEQ'), ('DNBSEQ', 'DNBSEQ')],
                    help_text='This technology used to measure the library. Acceptable values are listed at the ENA: https:\\/\\/ena-docs.readthedocs.io/en/latest/submit/reads/webin-cli.html?highlight=library_strategy#platform',
                    max_length=200, unique=True)),
                ('created_by', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT,
                                                 related_name='fms_core_platform_creation',
                                                 to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT,
                                                 related_name='fms_core_platform_modification',
                                                 to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InstrumentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date the instance was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date the instance was modified.')),
                ('deleted', models.BooleanField(default=False, help_text='Whether this instance has been deleted.')),
                ('type', models.CharField(
                    choices=[('454 GS', '454 GS'), ('454 GS 20', '454 GS 20'), ('454 GS FLX', '454 GS FLX'),
                             ('454 GS FLX+', '454 GS FLX+'), ('454 GS FLX Titanium', '454 GS FLX Titanium'),
                             ('454 GS Junior', '454 GS Junior'), ('HiSeq X Five', 'HiSeq X Five'),
                             ('HiSeq X Ten', 'HiSeq X Ten'), ('Illumina Genome Analyzer', 'Illumina Genome Analyzer'),
                             ('Illumina Genome Analyzer II', 'Illumina Genome Analyzer II'),
                             ('Illumina Genome Analyzer IIx', 'Illumina Genome Analyzer IIx'),
                             ('Illumina HiScanSQ', 'Illumina HiScanSQ'), ('Illumina HiSeq 1000', 'Illumina HiSeq 1000'),
                             ('Illumina HiSeq 1500', 'Illumina HiSeq 1500'),
                             ('Illumina HiSeq 2000', 'Illumina HiSeq 2000'),
                             ('Illumina HiSeq 2500', 'Illumina HiSeq 2500'),
                             ('Illumina HiSeq 3000', 'Illumina HiSeq 3000'),
                             ('Illumina HiSeq 4000', 'Illumina HiSeq 4000'), ('Illumina iSeq 100', 'Illumina iSeq 100'),
                             ('Illumina MiSeq', 'Illumina MiSeq'), ('Illumina MiniSeq', 'Illumina MiniSeq'),
                             ('Illumina NovaSeq 6000', 'Illumina NovaSeq 6000'), ('NextSeq 500', 'NextSeq 500'),
                             ('NextSeq 550', 'NextSeq 550'), ('PacBio RS', 'PacBio RS'),
                             ('PacBio RS II', 'PacBio RS II'), ('Sequel', 'Sequel'),
                             ('Ion Torrent PGM', 'Ion Torrent PGM'), ('Ion Torrent Proton', 'Ion Torrent Proton'),
                             ('Ion Torrent S5', 'Ion Torrent S5'), ('Ion Torrent S5 XL', 'Ion Torrent S5 XL'),
                             ('AB 3730xL Genetic Analyzer', 'AB 3730xL Genetic Analyzer'),
                             ('AB 3730 Genetic Analyzer', 'AB 3730 Genetic Analyzer'),
                             ('AB 3500xL Genetic Analyzer', 'AB 3500xL Genetic Analyzer'),
                             ('AB 3500 Genetic Analyzer', 'AB 3500 Genetic Analyzer'),
                             ('AB 3130xL Genetic Analyzer', 'AB 3130xL Genetic Analyzer'),
                             ('AB 3130 Genetic Analyzer', 'AB 3130 Genetic Analyzer'),
                             ('AB 310 Genetic Analyzer', 'AB 310 Genetic Analyzer'), ('MinION', 'MinION'),
                             ('GridION', 'GridION'), ('PromethION', 'PromethION'), ('BGISEQ-500', 'BGISEQ-500'),
                             ('DNBSEQ-T7', 'DNBSEQ-T7'), ('DNBSEQ-G400', 'DNBSEQ-G400'), ('DNBSEQ-G50', 'DNBSEQ-G50'),
                             ('DNBSEQ-G400 FAST', 'DNBSEQ-G400 FAST'), ('unspecified', 'unspecified')],
                    help_text='The product make. Acceptable values are listed at the ENA: https:\\/\\/ena-docs.readthedocs.io/en/latest/submit/reads/webin-cli.html?highlight=library_strategy#permitted-values-for-instrument',
                    max_length=200)),
                ('created_by', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT,
                                                 related_name='fms_core_instrumenttype_creation',
                                                 to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT,
                                                 related_name='fms_core_instrumenttype_modification',
                                                 to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date the instance was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date the instance was modified.')),
                ('deleted', models.BooleanField(default=False, help_text='Whether this instance has been deleted.')),
                ('name',
                 models.CharField(help_text='Unique name for the instrument instance.', max_length=200, unique=True,
                                  validators=[
                                      django.core.validators.RegexValidator(re.compile('^[a-zA-Z0-9.\\-_]{1,200}$'))])),
                ('created_by', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT,
                                                 related_name='fms_core_instrument_creation',
                                                 to=settings.AUTH_USER_MODEL)),
                ('platform', models.ForeignKey(help_text='Platform', on_delete=django.db.models.deletion.PROTECT,
                                               related_name='instruments', to='fms_core.platform')),
                ('type', models.ForeignKey(help_text='Instrument type', on_delete=django.db.models.deletion.PROTECT,
                                           related_name='instruments', to='fms_core.instrumenttype')),
                ('updated_by', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT,
                                                 related_name='fms_core_instrument_modification',
                                                 to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),

    ]