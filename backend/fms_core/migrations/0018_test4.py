# Generated by Django 3.1 on 2021-03-03 19:08

from django.db import migrations, models, transaction
import django.db.models.deletion
import json
from datetime import datetime, timedelta

from ..utils import float_to_decimal


def move_volume_history_to_update_process(apps, schema_editor):
    Sample = apps.get_model("fms_core", "Sample")
    Version = apps.get_model("reversion", "Version")
    Revision = apps.get_model("reversion", "Revision")
    Protocol = apps.get_model("fms_core", "Protocol")
    Process = apps.get_model("fms_core", "Process")
    ProcessSample = apps.get_model("fms_core", "ProcessSample")

    update_protocol = Protocol.objects.get(name="Update")

    for sample in Sample.objects.all():
        sample_versions = Version.objects.filter(content_type__model="sample", object_id=sample.id).order_by('id')
        previous_update_comment = ''
        previous_volume_value = None
        for index, sample_version in enumerate(sample_versions):
            data = json.loads(sample_version.serialized_data)
            update_comment = data[0]["fields"]["update_comment"]
            if index != 0: # skip first version, as this will be an object creation
                volume_history = data[0]["fields"]["volume_history"]
                last_vh = volume_history[-1]
                if last_vh["update_type"] == "update":
                    process_sample_comment = ''
                    if update_comment != previous_update_comment:
                        process_sample_comment = update_comment

                    revision = Revision.objects.get(id=sample_version.revision_id)
                    process, _ = Process.objects.get_or_create(comment=f'{revision.id}',
                                                               protocol=update_protocol)
                    volume_used = float_to_decimal(float(previous_volume_value) - float(volume_history[-1]["volume_value"]))
                    ProcessSample.objects.create(process=process,
                                                 source_sample_id=sample.id,
                                                 execution_date=revision.date_created,
                                                 volume_used=volume_used,
                                                 comment=process_sample_comment)

            previous_update_comment = update_comment
            previous_volume_value = data[0]["fields"]["volume_history"][-1]["volume_value"]


    for process in Process.objects.filter(protocol__name="Update"):
        revision_id = process.comment
        process.comment = Revision.objects.get(id=int(revision_id)).comment
        process.save()


class Migration(migrations.Migration):

    dependencies = [
        ('fms_core', '0017_v3_1_0'),
    ]

    operations = [
        migrations.RunPython(
            move_volume_history_to_update_process,
            migrations.RunPython.noop
        ),



    ]
